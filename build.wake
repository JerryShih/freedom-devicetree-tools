def ./file = simplify "{here}/{file}"

def configure_file     = ./ "configure"
def configure_ac_file  = "{configure_file}.ac"
def makefile_file      = ./ "Makefile"
def makefile_in_file   = "{makefile_file}.in"
def makefile_am_file   = "{makefile_file}.am"
def git_version_script = ./ "scripts/git-version"
def m4_dir             = ./ "m4"

def doJob cmdline inputs =
  makePlan cmdline inputs
  | setPlanDirectory here
  | setPlanFnOutputs (filter (\f !(matches '.*\.Po' f)) _)
  | runJob
  | getJobOutputs

def makeTool tool =
  def autoreconfOutputs =
    def cmdline = which "autoreconf", "-i", Nil
    def inputs =  sources here '.*'
    doJob cmdline inputs

  # manual job because make modifies ".deps/*" outputs
  def configureOutputs =
    def configure = filter (configure_file ==~ _.getPathName) autoreconfOutputs
    def cmdline = map (relative here _.getPathName) configure
    def inputs = configure ++ autoreconfOutputs ++ sources here '.*'
    doJob cmdline inputs

  def makeOutputs =
    def cmdline = which "make", Nil
    def poFiles = files here '.*\.Po' | map makeStatePath
    def allSources = sources here '.*'
    def inputs = configureOutputs ++ autoreconfOutputs ++ allSources ++ poFiles
    makePlan cmdline inputs
    | setPlanDirectory here
    | setPlanFnOutputs (filter (\f !(matches '.*\.Po' f)) _)
    | runJob
    | getJobOutputs

  makeOutputs | filter (./tool ==~ _.getPathName) | head

global def freedom_ldscript_generator       _ = makeTool "freedom-ldscript-generator"
global def freedom_makeattributes_generator _ = makeTool "freedom-makeattributes-generator"
global def freedom_metal_header_generator   _ = makeTool "freedom-metal_header-generator"
global def freedom_metal_specs_generator    _ = makeTool "freedom-metal_specs-generator"
global def freedom_openocdcfg_generator     _ = makeTool "freedom-openocdcfg-generator"
global def freedom_zephyrdtsfixup_generator _ = makeTool "freedom-zephyrdtsfixup-generator"


### Linker Script Generator ###
tuple FreedomLdScriptGeneratorOptions =
  global DTBFile    Path
  global OutputFile String
  global Scratchpad Boolean
  global Ramrodata  Boolean

global def makeFreedomLdScriptGeneratorOptions dtbFile outputFile =
  FreedomLdScriptGeneratorOptions dtbFile outputFile False False

global def runFreedomLdScriptGenerator options =
  def tool = freedom_ldscript_generator 0
  def dtbFile = options.getFreedomLdScriptGeneratorOptionsDTBFile
  def cmdline =
    def base =
      tool.getPathName,
      "-d", dtbFile.getPathName,
      "-l", options.getFreedomLdScriptGeneratorOptionsOutputFile,
      Nil

    def scratchpad = match options.getFreedomLdScriptGeneratorOptionsScratchpad
      True  = "--scratchpad", Nil
      False = Nil

    def ramrodata = match options.getFreedomLdScriptGeneratorOptionsRamrodata
      True  = "--ramrodata", Nil
      False = Nil

    base ++ scratchpad ++ ramrodata

  def inputs = tool, dtbFile, Nil
  makePlan cmdline inputs | runJob | getJobOutput


### Metal header Generator ###
tuple FreedomMetalHeaderGeneratorOptions =
  global DTBFile    Path
  global OutputFile String

global def makeFreedomMetalHeaderGeneratorOptions dtbFile outputFile =
  FreedomMetalHeaderGeneratorOptions dtbFile outputFile

global def runFreedomMetalHeaderGenerator options =
  def tool = freedom_metal_header_generator 0
  def dtbFile = options.getFreedomMetalHeaderGeneratorOptionsDTBFile
  def outputFile = options.getFreedomMetalHeaderGeneratorOptionsOutputFile
  def cmdline =
    tool.getPathName,
    "-d", dtbFile.getPathName,
    "-o", outputFile,
    Nil
  def inputs = mkdir 0775 "{outputFile}/..".simplify, tool, dtbFile, Nil
  makePlan cmdline inputs | runJob | getJobOutput

### Make Attributes Generator ###
tuple FreedomMakeAttributesGeneratorOptions =
  global DTBFile    Path
  global OutputFile String

global def makeFreedomMakeAttributesGeneratorOptions dtbFile outputFile =
  FreedomMakeAttributesGeneratorOptions dtbFile outputFile

tuple FreedomMakeAttributes =
  File_ Path
  MARCH_ String
  MABI_  String
global def getFreedomMakeAttributesFile  = getFreedomMakeAttributesFile_
global def getFreedomMakeAttributesMARCH = getFreedomMakeAttributesMARCH_
global def getFreedomMakeAttributesMABI  = getFreedomMakeAttributesMABI_

global def runFreedomMakeAttributesGenerator options =
  def tool = freedom_makeattributes_generator 0
  def dtbFile = options.getFreedomMakeAttributesGeneratorOptionsDTBFile
  def outputFile = options.getFreedomMakeAttributesGeneratorOptionsOutputFile
  def cmdline =
    tool.getPathName,
    "-d", dtbFile.getPathName,
    "-o", outputFile,
    Nil
  def inputs = mkdir 0775 "{outputFile}/..".simplify, tool, dtbFile, Nil
  def file = makePlan cmdline inputs | runJob | getJobOutput
  def contents = read file
  def mabi  = extract '.*FRAMEWORK_BOARD_DTS_MABI=([a-zA-Z0-9_]+).*'  contents | head
  def march = extract '.*FRAMEWORK_BOARD_DTS_MARCH=([a-zA-Z0-9_]+).*' contents | head
  FreedomMakeAttributes file march mabi
